mov		r2		$255	;move 255 into r2
mov		r1		$244	;move 244 into r1
mov		[r1]	r2  	;move contents of r2 into memory pointed to by r1 (now address 244)
print	[r1]			;print memory pointed to by r1
mov		[r2]	[r1]	;move memory pointed to by r1 into memory pointed to by r2
print	r2				;print memory pointed to by r2
mov		r3		[r2]	;move memory pointed to by r2 into contents of r3
print	r3				;print r3
mov	r4 $4		;move 4 into r4
clear	r2 r4		;clear memory at r2 for length r4
mov 	r6 $12		;move 12 into r6
cmp	r6 $14		;compare r6 and 14
cmp	r6 $11		;compare r6 and 11
cmp	r6 $12		;compare r6 and 12
mov	r7 $1		;jump over this exit
jmp	r7
exit  r6          ; this is exit.
print	r1
mov 	r6 $12		;move 12 into r6
cmp	r6 $14		;compare r6 and 14
jlt	r7		; jlt over the exit
exit	r6
print 	r1
mov 	r6 $19		;move 12 into r6
cmp	r6 $14		;compare r6 and 18
jgt	r6		; jgt over the exit
exit r7
print 	r1
mov 	r6 $14		;move 12 into r6
cmp	r6 $14		;compare r6 and 18
je r7		; je over the exit
exit  r6
print	r1
exit r6